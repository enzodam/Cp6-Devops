version: '3.8'

services:
  # Banco de dados PostgreSQL
  postgres:
    image: postgres:15
    container_name: toystore-db
    environment:
      POSTGRES_DB: toystore
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - toystore-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d toystore"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Aplicação Spring Boot
  app:
    build: .
    container_name: toystore-app
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://toystore-db:5432/toystore
      SPRING_DATASOURCE_USERNAME: ${DB_USER:-postgres}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD:-password}
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SERVER_SERVLET_CONTEXT_PATH: /loja-de-brinquedos
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - toystore-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/loja-de-brinquedos/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:

networks:
  toystore-network:
    driver: bridge